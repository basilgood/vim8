[[plugins]]
repo = 'tpope/vim-vinegar'
on_map = ['-']
hook_add = '''
let g:netrw_bufsettings = 'nomodifiable nomodified relativenumber nowrap readonly nobuflisted hidden'
let g:netrw_sort_dotfiles_first = 1
let g:netrw_altfile = 1
let g:netrw_home = $CACHE
'''
hook_source= '''
function! InNetrw() abort
  nmap <buffer> <right> <cr>
  nmap <buffer> <left> -
  nmap <buffer> J j<cr>
  nmap <buffer> K k<cr>
  nmap <buffer> qq :bn<bar>bd#<cr>
  nmap <buffer> qd .terminal ++close rm -rf
  nmap <buffer> qt .terminal ++close touch
endfunction

autocmd AutoCmd FileType netrw call InNetrw()
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
on_event = ['BufReadPre']
hook_post_source = '''
execute 'source' fnameescape(expand('$HOME/.vim/rc/lightline.vim'))
'''

# [[plugins]]
# repo = 'junegunn/fzf'
# rtp = '~/.cache/dein/repos/github.com/junegunn/fzf'
# merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
on_cmd = ['Files', 'Buffers']
hook_add = '''
nnoremap <c-p> :Files<CR>
nnoremap <c-q> :Files <C-R>=expand('%:h')<CR><CR>
nnoremap <bs> :Buffers<CR>
'''
hook_post_source = '''
execute 'source' fnameescape(expand('$HOME/.vim/rc/fzf.vim'))
'''

[[plugins]]
repo = 'w0rp/ale'
on_event = ['BufReadPre']
hook_add = '''
nmap ]a <Plug>(ale_next_wrap)
nmap [a <Plug>(ale_previous_wrap)
'''
hook_post_source = '''
execute 'source' fnameescape(expand('$HOME/.vim/rc/ale.vim'))
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
on_map = {nv = '<Plug>'}
on_map = ['gc', 'g<', 'g>', '<C-_>', '<Leader>_']

[[plugins]]
repo = 'tpope/vim-repeat'
on_map = ['.']

[[plugins]]
repo = 'tpope/vim-surround'
depends = ['vim-repeat']
on_map = ['<Plug>C', '<Plug>D', '<Plug>Y', '<Plug>V']
hook_add = '''
nmap ds  <Plug>Dsurround
nmap cs  <Plug>Csurround
nmap cS  <Plug>CSurround
nmap ys  <Plug>Ysurround
nmap yS  <Plug>YSurround
nmap yss <Plug>Yssurround
nmap ySs <Plug>YSsurround
nmap ySS <Plug>YSsurround
xmap S   <Plug>VSurround
xmap gS  <Plug>VgSurround
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = ['BufReadPre']
hook_add = '''
let g:EditorConfig_exclude_patterns = ['fugitive://.\*', 'scp://.\*']
'''

[[plugins]]
repo = 'kana/vim-submode'
on_map = ['<C-W>', 'zl', 'zh']
hook_post_source = '''
execute 'source' fnameescape(expand('$HOME/.vim/rc/submode.vim'))
'''

[[plugins]]
repo = 'zhimsel/vim-stay'
on_event = ['BufReadPre']
hook_source = '''
autocmd AutoCmd BufNewFile,BufRead */.git/addp-hunk-edit.diff let b:stay_ignore = 1
'''

[[plugins]]
repo = 'LnL7/vim-nix'
on_ft = 'nix'

[[plugins]]
repo = 'markonm/traces.vim'
on_event = 'CmdlineEnter'

[[plugins]]
repo = 'cskeeters/vim-smooth-scroll'
on_map = ['zz', 'zb', 'zt', '<C-u>', '<C-d>', '<C-f>', '<C-b>']

[[plugins]]
repo = 'romainl/vim-cool'
on_map = ['n', 'N']
hook_add = '''
let g:CoolTotalMatches = 1
'''

[[plugins]]
repo = 'itchyny/vim-parenmatch'
on_event = ['BufReadPre']
hook_source = '''
highlight ParenMatch guifg=#85EB6A guibg=#135B00 gui=NONE cterm=NONE term=reverse ctermbg=11
'''

[[plugins]]
repo = 'tpope/vim-dispatch'
on_source = ['vim-fugitive']
on_cmd = ['Dispatch', 'Dispatch!', 'Make']
on_map = ['zp', 'zf', '`!']
hook_source = '''
function! InFugitive() abort
  nmap <buffer> zp :<c-u>Dispatch! git push<CR>
  nmap <buffer> zf :<c-u>Dispatch! git push -f<CR>
endfunction
autocmd AutoCmd FileType fugitive call InFugitive()
'''

[[plugins]]
repo = 'stefandtw/quickfix-reflector.vim'
on_ft = 'qf'

[[plugins]]
repo = 'hotwatermorning/auto-git-diff'
on_ft = 'gitrebase'

[[plugins]]
repo = 'thinca/vim-localrc'
on_event = 'BufReadPre'

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'xhtml', 'javascript', 'twig', 'jsx']
hook_add = '''
let g:closetag_emptyTags_caseSensitive = 1
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx,*.js,*.twig,*.html.twig'
let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.jsx,*.js,*.twig,*.html.twig'
let g:closetag_filetypes = 'html,xhtml,phtml,jsx,javascript,twig,html.twig'
let g:closetag_xhtml_filetypes = 'xhtml,jsx,javascript,twig,html.twig'
'''

[[plugins]]
repo = 'mbbill/undotree'
on_cmd = 'UndotreeToggle'
hook_add = '''
let g:undotree_WindowLayout = 4
let g:undotree_SetFocusWhenToggle = 1
let g:undotree_ShortIndicators = 1
nnoremap <silent> <Leader>u :<C-u>UndotreeToggle<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = '<Plug>(EasyAlign)'
hook_add = '''
nmap ga <Plug>(EasyAlign)
xmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'terryma/vim-expand-region'
on_map = '<Plug>(expand'
hook_add = '''
nmap + <Plug>(expand_region_expand)
vmap + <Plug>(expand_region_expand)
vmap _ <Plug>(expand_region_shrink)
nmap _ <Plug>(expand_region_shrink)

let g:expand_region_text_objects = {
      \ 'iw'  :0,
      \ 'iW'  :0,
      \ 'i"'  :0,
      \ 'i''\' :0,
      \ 'i]'  :1,
      \ 'ib'  :1,
      \ 'iB'  :1,
      \ 'il'  :1,
      \ 'ip'  :1,
      \ 'ie'  :1,
      \ 'a]'  :1,
      \ 'ab'  :1,
      \ 'aB'  :1,
      \ }
'''

[[plugins]]
repo = 'sgur/cmdline-completion'
on_event = 'CmdlineEnter'

[[plugins]]
repo = 'gabesoft/vim-ags'
on_cmd = 'Ags'
hook_add = '''
let g:ags_winplace = 'right'
'''

[[plugins]]
repo = 'wellle/targets.vim'
on_event = 'BufReadPre'

[[plugins]]
repo = 'gregsexton/gitv'
on_cmd = [ 'Gitv', 'Gitv!', 'gitv' ]

[[plugins]]
repo = 'markonm/hlyank.vim'
on_event = 'BufReadPre'
